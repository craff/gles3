(executable
 (name spheres)
 (public_name spheres)
 (flags (:standard -w -6-27-50-33))
 (optional) ; only compiled if ancient is present.
 (libraries gles3 ancient))

(rule
 (targets vertex_shadow.ml)
 (deps vertex_shadow.glsl)
 (action (with-stdout-to vertex_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat vertex_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets fragment_shadow.ml)
 (deps fragment_shadow.glsl)
 (action (with-stdout-to fragment_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat fragment_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets vertex_light_with_shadow.ml)
 (deps vertex_light_with_shadow.glsl)
 (action (with-stdout-to vertex_light_with_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat vertex_light_with_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets fragment_light_with_shadow.ml)
 (deps fragment_light_with_shadow.glsl)
 (action (with-stdout-to fragment_light_with_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat fragment_light_with_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets vertex_implicit_shadow.ml)
 (deps vertex_implicit_shadow.glsl)
 (action (with-stdout-to vertex_implicit_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat vertex_implicit_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets sphere_shadow.ml)
 (deps sphere_shadow.glsl)
 (action (with-stdout-to sphere_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat sphere_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets fragment_implicit_shadow.ml)
 (deps fragment_implicit_shadow.glsl)
 (action (with-stdout-to fragment_implicit_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat fragment_implicit_shadow.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets sphere.ml)
 (deps sphere.glsl)
 (action (with-stdout-to sphere.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat sphere.glsl)
    (echo "\"\n")
    ))))

(rule
 (targets fragment_light_implicit_with_shadow.ml)
 (deps fragment_light_implicit_with_shadow.glsl)
 (action (with-stdout-to fragment_light_implicit_with_shadow.ml (progn
    (echo "let str = String.trim \"") ; hack to remove newlight.
    (cat fragment_light_implicit_with_shadow.glsl)
    (echo "\"\n")
    ))))
